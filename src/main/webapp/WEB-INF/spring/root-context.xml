<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd">

    <!-- jdbc property : 현재 파일에만 속성값 적용 -->
    <context:property-placeholder
            location="/WEB-INF/jdbc.properties" />   <!--jdbc의 데이터베이스 연결 정보를 가져오는 구문 ex) DRV, URL-->

    <!-- jdbc properties : 모든 파일에 속성값 적용 -->
    <util:properties id="jdbc"
                     location="/WEB-INF/jdbc.properties" />   <!--데이터베이스 연결 정보를 DAO에서 쓰기위한 구문-->

    <!-- dbcp datasource -->
    <bean id="dbcpDataSource"
          class="org.apache.commons.dbcp2.BasicDataSource"
          p:driverClassName="${DRV}" p:url="${URL}"
          p:username="${USR}" p:password="${PWD}" />
    <!-- 이건 외부라이브러리라 bean 태그로 설정 해야됨
         간편하게 하기 위해서 p태그로 쓴 것임
         이렇게 쓰면 spring이 알아서 연결 객체를 만들어 줌 -->

    <!-- jdbc template -->
    <bean id="jdbcTemplate"
          class="org.springframework.jdbc.core.JdbcTemplate"
          p:dataSource="dataSource"
          p:dataSource-ref="dbcpDataSource" />

</beans>